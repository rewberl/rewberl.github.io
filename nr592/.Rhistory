a = 1
b = 2
c = 42
a
a = a + b
a
a = a + b
a
a = a + b
a
b
a = 1
b = 2
c = 42
# This is a comment.
# This is a comment.
m = 5
class(m)
m = 5L
class(m)
m <- 5
m = 5
m == 5
?methods::`character-class`
x = "apple"
y = "orange"
z = "2.5"
class(x)
z + b
x + y
paste(x, y)
paste(x, y,x,y,x)
paste0(x, y,x,y,x)
help("paste")
paste0(x, y,x,y,x, sep=",")
paste0(c(x, y,x,y,x), sep=",")
paste(x, y,x,y,x, sep=",")
Sys.Date()
Sys.time()
class(Sys.time())
z
b
z+b
z = as.numeric(z)
z
z+b
steve = "Steve"
as.numeric(steve)
NA
is.numeric(NA)
is.logical(NA)
?base::`Constants`
LETTERS
letters
pi
month.name
month.abb
a
b
c
numVec = c(1,2,3,8,9,10)
numVec
charVec = c("the","quick","brown","fox")
charVec
help(c)
?c
is.numeric(numVec)
is.character(charVec)
numVec[4]
numVec[8]
charVec[2]
numVec[1]
numVec[1] = 10000
numVec
numVec[4]
numVec[4] / 2
numVec[4]
numVec[4] / 2
numVecB = c(75,100,500)
numVecB
numVecC = c(numVec, numVecB)
numVecC
charVecB = c("jumps","over","the","lazy","dog")
charVec
charVecB
charVecC = c(charVec, charVecB)
charVecC
numVec + numVecB
numVec
numVecB
abcd = c(1,2)
numVecB + abcd
length(numVec)
length(charVec)
firstM = matrix(data=c(4,81,5,84,
70,72,74,69,
29,34,27,3),
nrow=3, ncol=4)
firstM
?matrix
firstM = matrix(data=c(4,81,5,84,
70,72,74,69,
29,34,27,3),
nrow=3, ncol=4, byrow=TRUE)
firstM
dim(firstM)
nrow(firstM)
ncol(firstM)
firstM[2,4]
firstM[2,4] = firstM[2,4] - 1
firstM[2,4]
firstM
firstM[2,]
firstM[,4]
df1$id = paste0("a","0", df1[,c("age")])
My result was 5.5!
firstM = matrix(data=c(4,81,5,84,
70,72,74,69,
29,34,27,3),
nrow=3, ncol=4, byrow=TRUE)
firstM
firstDF = data.frame(firstM)
firstDF
firstDF$X1
firstDF[,1]
firstDF[,"X1"]
firstDF[,c("X1","X3")]
sd
data("HairEyeColor")
?HairEyeColor
HairEyeColor
class(HairEyeColor)
hairEyeColor = as.data.frame(HairEyeColor)
hairEyeColor
rm(HairEyeColor)
data()
gombe = read.csv(file="./data/gombe_128.csv", header=TRUE)
getwd()
?read.csv
gombe = read.csv(file="./data/gombe_128.csv")
gombe = read.csv(file="./lectures/data/gombe_128.csv", header=TRUE)
head(gombe)
horseKicks = read.table(file="./data/HorseKicks.txt", header=TRUE, sep="\t")
horseKicks = read.table(file="./lectures/data/HorseKicks.txt", header=TRUE, sep="\t")
horseKicks
install.packages("tidyverse")
library(readxl)
?read_xlsx
folktales = read_xlsx(path="./data/rsos150645supp1.xlsx",
sheet=1, range="A2:JP52")
folktales = read_xlsx(path="./lectures/data/rsos150645supp1.xlsx",
sheet=1, range="A2:JP52")
folktales
folktales = as.data.frame(folktales)
folktales[1:5,1:15]
colnames(folktales)[1] = "society"
folktales[1:5,1:15]
folktales$society
install.packages(vioplot)
install.packages("vioplot")
help("subset")
?subset
focoShelter = read.csv(file="./data/Fort_Collins_Shelter_Service_Data.csv", header=TRUE)
head(focoShelter)
str(focoShelter)
colnames(focoShelter)
head(focoShelter)
library(tidyr)
focoShelter = focoShelter[,-c(12:13)]
head(focoShelter)
?gather
focoShelterTidy = gather(focoShelter, "variable", "value", 2:11)
head(focoShelterTidy)
unique(focoShelterTidy$variable)
?grep
focoShelterMWF = focoShelterTidy[grepl("Men", focoShelterTidy$variable, fixed=T) |
grepl("Women", focoShelterTidy$variable, fixed=T) |
grepl("Families", focoShelterTidy$variable, fixed=T),]
grepl("Men", focoShelterTidy$variable, fixed=T)
!grepl("Men", focoShelterTidy$variable, fixed=T)
head(focoShelterMWF)
head(focoShelterNot)
focoShelterNot = focoShelterTidy[!grepl("Men", focoShelterTidy$variable, fixed=T) &
!grepl("Women", focoShelterTidy$variable, fixed=T) &
!grepl("Families", focoShelterTidy$variable, fixed=T),]
head(focoShelterNot)
nrow(focoShelterTidy)
nrow(focoShelterMWF) + nrow(focoShelterNot)
head(focoShelterMWF)
str(focoShelterMWF)
colnames(focoShelterMWF)
unique(focoShelterMWF$variable)
?separate
focoShelterMWF = separate(focoShelterMWF, 2, into=c("variable","Sex"),
sep="\\.\\.\\.(?!.*\\.\\.\\.)")
head(focoShelterMWF)
focoShelterNot$Sex = "Total"
focoShelterNot = focoShelterNot[,c(1,2,4,3)]
head(focoShelterMWF)
head(focoShelterNot)
head(focoShelterMWF)
head(focoShelterNot)
?rbind
focoShelterTidy = rbind(focoShelterMWF, focoShelterNot)
str(focoShelterTidy)
focoShelterTidy = spread(focoShelterTidy, variable, value)
head(focoShelterTidy)
summary(focoShelter)
focoShelterTidy$Month = factor(focoShelterTidy$Month,
levels=as.character(focoShelter$Month))
focoShelterTidy$Sex = factor(focoShelterTidy$Sex,
levels=c("Men","Women","Families","Total"))
focoShelterTidy = focoShelterTidy[with(focoShelterTidy, order(Month, Sex)),]
head(focoShelterTidy)
str(focoShelterTidy)
head(focoShelterTidy)
data("airquality")
View(airquality)
?mean
library(ggplot2)
library(readxl)
egg = read_xlsx(path="./data/aaj1945_DataS1_Egg_shape_by_species_v2.xlsx",
sheet=1)
egg = read_xlsx(path="./lectures/data/aaj1945_DataS1_Egg_shape_by_species_v2.xlsx",
sheet=1)
egg = as.data.frame(egg)
head(egg)
str(egg)
colnames(egg)
colnames(egg)[7:9] = c("AvgLength","NumberOfImages","NumberOfEggs")
colnames(egg)
?ggplot
egg = read.csv("", header=T)
?read.csv
?geom_bar()
?stat_summary
?mean_cl_normal
?ylim
??summarySE
install.packages("Rmisc")
library(Rmisc)
?summarySE
eggAsymByOrder = summarySE(data=egg,
measurevar="Asymmetry",
groupvars=c("Order"))
head(eggAsymByOrder)
head(egg)
windows()
quartz()
X11()
?pvclust
install.packages("pvclust")
?pvclust
library(pvclust)
?pvclust
install.packages(c("lavaan","semTools"))
install.packages("psych")
install.packages(c("rmarkdown","knitr","lavaan","psych","semTools"))
install.packages("tidyverse")
install.packages("GPArotation")
iinstall.packages("devtools")
install.packages("devtools")
library(devtools)
install_version("lavaan", version = "0.5")
install_version("lavaan", version = "lavaan_0.5-23.1097")
install_version("lavaan", version = "0.5-23.1097")
ethPlants = as.data.frame(read_tsv("./lectures/data/0009408-190415153152247.txt"))
library(readr)
ethPlants = as.data.frame(read_tsv("./lectures/data/0009408-190415153152247.txt"))
ethPlants = ethPlants[!is.na(ethPlants$class),]
neProvShape = readOGR(dsn="./lectures/data",layer="ne_10m_admin_1_states_provinces")
neProvShapeETH = neProvShape[neProvShape$adm0_a3 == "ETH",]
library(rgdal)
neProvShape = readOGR(dsn="./lectures/data",layer="ne_10m_admin_1_states_provinces")
neProvShapeETH = neProvShape[neProvShape$adm0_a3 == "ETH",]
ethPlantsSP = ethPlants[!is.na(ethPlants$decimalLongitude) &
!is.na(ethPlants$decimalLatitude),]
coordinates(ethPlantsSP) = ~ decimalLongitude + decimalLatitude
proj4string(ethPlantsSP) = CRS(proj4string(neProvShapeETH))
ethPlantsInGambela = over(ethPlantsSP,
neProvShapeETH[neProvShapeETH$name == "Gambela Peoples",])
ethPlantsInGambela = ethPlants[!is.na(ethPlantsInGambela$name),]
head(ethPlantsInGambela$class, 20)
install.packages("geodist")
?geodist
library(geodist)
?geodist
?triad_census
library(igraph)
?triad_census
gc()
install.packages(c("geosphere", "vegan"))
install.packages("kableExtra")
