## Question 2.1
m1=matrix(c(v1,v2,v3),5,3)
m1
## Question 2.2
m1cols=list('age','height', 'pred')
m1cols
df1=as.data.frame(m1)
colnames(df1)=m1cols
df1
##Question 2.3
str(df1)
v1 = c(1,2,3,4,5)
v2 = seq(from=6, to=10, by=1)
v2 = v2/2
v1sq = v1^2
v3 = v1sq + v2
rm(v1sq)
v1 = as.integer(v1)
v2 = as.integer(v2)
v3 = as.integer(v3)
v3=sort(v3, decreasing=T)
v1 = as.ordered(v1)
m1=matrix(c(v1,v2,v3),nrow=5,ncol=3)
focoShelter = read.csv(file="./data/Fort_Collins_Shelter_Service_Data.csv", header=TRUE)
focoShelter = read.csv(file="./lectures/data/Fort_Collins_Shelter_Service_Data.csv", header=TRUE)
head(focoShelter)
library(reshape2)
head(melt(focoShelter))
colnames(focoShelter)
head(focoShelter[,-c(12:13)])
focoShelter = focoShelter[,-c(12:13)]
head(gather(focoShelter))
library(tidyr)
head(gather(focoShelter))
str(focoShelter)
colnames(focoShelter)
?gather
head(gather(focoShelter, "variable", "value", 2:11))
?separate
focoShelter = gather(focoShelter, "variable", "value", 2:11)
head(separate(focoShelter, 2, sep="..."))
separate(focoShelter, 2, into=c("variable","sex"), sep="...")
unique(focoShelter$variable)
?grepl
head(focoShelter[grepl("Men", focoShelter$variable, fixed=T),])
focoShelterMWF = focoShelter[grepl("Men", focoShelter$variable, fixed=T) |
grepl("Women", focoShelter$variable, fixed=T) |
grepl("Families", focoShelter$variable, fixed=T),]
head(focoShelterMWF)
str(focoShelterMWF)
colnames(focoShelterMWF)
focoShelterNot = focoShelter[!grepl("Men", focoShelter$variable, fixed=T) &
!grepl("Women", focoShelter$variable, fixed=T) &
!grepl("Families", focoShelter$variable, fixed=T),]
head(focoShelterNot)
head(separate(focoShelterMWF, 2, into=c("variable","sex"), sep="..."))
head(separate(focoShelterMWF, 2, into=c("variable","sex"), sep="[...]"))
head(separate(focoShelterMWF, 2, into=c("variable","sex"), sep="[\...]"))
head(separate(focoShelterMWF, 2, into=c("variable","sex"), sep="\..."))
head(separate(focoShelterMWF, 2, into=c("variable","sex"), sep="(\.\.\.)"))
head(separate(focoShelterMWF, 2, into=c("variable","sex"), sep="(\\.\\.\\.)"))
nrow(separate(focoShelterMWF, 2, into=c("variable","sex"), sep="(\\.\\.\\.)"))
head(separate(focoShelterMWF, 2, into=c("variable","sex"),
sep="\\.\\.\\.(?!.*\\.\\.\\.)"))
focoShelterMWF = separate(focoShelterMWF, 2, into=c("variable","sex"),
sep="\\.\\.\\.(?!.*\\.\\.\\.)")
unique(focoShelterMWF$sex)
focoShelterNot$sex = "Total"
head(focoShelterMWF)
head(focoShelterMWF)
head(focoShelterNot)
focoShelterNot = focoShelterNot[,c(1,2,4,3)]
head(focoShelterMWF)
head(focoShelterNot)
str(focoShelterNot)
focoShelterTidy = rbind(focoShelterMWF, focoShelterNot)
str(focoShelterTidy)
?spread
head(spread(focoShelterTidy, c("variable","sex"), "value"))
head(spread(focoShelterTidy, variable, value))
nrow(spread(focoShelterTidy, variable, value))
View(spread(focoShelterTidy, variable, value))
str(focoShelter)
focoShelter = read.csv(file="./data/Fort_Collins_Shelter_Service_Data.csv", header=TRUE)
focoShelter = read.csv(file="./lectures/data/Fort_Collins_Shelter_Service_Data.csv", header=TRUE)
focoShelter = focoShelter[,-c(12:13)]
focoShelterMWF = focoShelter[grepl("Men", focoShelter$variable, fixed=T) |
grepl("Women", focoShelter$variable, fixed=T) |
grepl("Families", focoShelter$variable, fixed=T),]
focoShelterNot = focoShelter[!grepl("Men", focoShelter$variable, fixed=T) &
!grepl("Women", focoShelter$variable, fixed=T) &
!grepl("Families", focoShelter$variable, fixed=T),]
focoShelterTidy = gather(focoShelter, "variable", "value", 2:11)
focoShelterMWF = focoShelter[grepl("Men", focoShelter$variable, fixed=T) |
grepl("Women", focoShelter$variable, fixed=T) |
grepl("Families", focoShelter$variable, fixed=T),]
focoShelterMWF = focoShelterTidy[grepl("Men", focoShelterTidy$variable, fixed=T) |
grepl("Women", focoShelterTidy$variable, fixed=T) |
grepl("Families", focoShelterTidy$variable, fixed=T),]
focoShelterNot = focoShelterTidy[!grepl("Men", focoShelterTidy$variable, fixed=T) &
!grepl("Women", focoShelterTidy$variable, fixed=T) &
!grepl("Families", focoShelterTidy$variable, fixed=T),]
nrow(focoShelterTidy)
nrow(focoShelterMWF) + nrow(focoShelterNot)
focoShelterMWF = separate(focoShelterMWF, 2, into=c("variable","sex"),
sep="\\.\\.\\.(?!.*\\.\\.\\.)")
focoShelterNot$sex = "Total"
focoShelterNot = focoShelterNot[,c(1,2,4,3)]
focoShelterTidy = rbind(focoShelterMWF, focoShelterNot)
View(spread(focoShelterTidy, variable, value))
head(focoShelter
)
tail(focoShelter)
View(focoShelter)
?ordered
str(focoShelter
)
head(focoShelter)
focoShelterTidy$Month = factor(focoShelterTidy$Month, levels=as.character(focoShelter$Month))
head(focoShelterTidy)
str(focoShelterTidy)
focoShelterTidy = rbind(focoShelterMWF, focoShelterNot)
focoShelterTidy = spread(focoShelterTidy, variable, value)
focoShelterTidy$Month = factor(focoShelterTidy$Month, levels=as.character(focoShelter$Month))
head(focoShelterTidy)
focoShelterMWF = focoShelterTidy[grepl("Men", focoShelterTidy$variable, fixed=T) |
grepl("Women", focoShelterTidy$variable, fixed=T) |
grepl("Families", focoShelterTidy$variable, fixed=T),]
focoShelterMWF = separate(focoShelterMWF, 2, into=c("variable","Sex"),
sep="\\.\\.\\.(?!.*\\.\\.\\.)")
focoShelterNot = focoShelterTidy[!grepl("Men", focoShelterTidy$variable, fixed=T) &
!grepl("Women", focoShelterTidy$variable, fixed=T) &
!grepl("Families", focoShelterTidy$variable, fixed=T),]
focoShelterNot$Sex = "Total"
focoShelterNot = focoShelterNot[,c(1,2,4,3)]
focoShelterTidy = gather(focoShelter, "variable", "value", 2:11)
focoShelterMWF = focoShelterTidy[grepl("Men", focoShelterTidy$variable, fixed=T) |
grepl("Women", focoShelterTidy$variable, fixed=T) |
grepl("Families", focoShelterTidy$variable, fixed=T),]
focoShelterNot = focoShelterTidy[!grepl("Men", focoShelterTidy$variable, fixed=T) &
!grepl("Women", focoShelterTidy$variable, fixed=T) &
!grepl("Families", focoShelterTidy$variable, fixed=T),]
focoShelterMWF = separate(focoShelterMWF, 2, into=c("variable","Sex"),
sep="\\.\\.\\.(?!.*\\.\\.\\.)")
focoShelterNot$Sex = "Total"
focoShelterNot = focoShelterNot[,c(1,2,4,3)]
focoShelterTidy = rbind(focoShelterMWF, focoShelterNot)
str(focoShelterTidy)
focoShelterTidy = spread(focoShelterTidy, variable, value)
focoShelterTidy$Month = factor(focoShelterTidy$Month,
levels=as.character(focoShelter$Month))
focoShelterTidy$Sex = factor(focoShelterTidy$Sex,
levels=c("Men","Women","Families","Total"))
head(focoShelterTidy)
str(focoShelterTidy)
focoShelterTidy[with(focoShelterTidy, order(Month, Sex))]
head(focoShelterTidy[with(focoShelterTidy, order(Month, Sex)),])
focoShelterTidy = focoShelterTidy[with(focoShelterTidy, order(Month, Sex)),]
str(focoShelterTidy)
summary(focoShelterTidy)
data("airquality")
head(airquality)
summary(airquality)
airquality[is.na(airquality$Ozone),]
airquality[rowSums(is.na(airquality)) > 0,]
airquality[complete.cases(airquality),]
airquality[rowSums(is.na(airquality)) == 0,]
airquality = airquality[complete.cases(airquality),]
nrow(airquality)
data("airquality")
nrow(airquality)
airqualityCom = airquality[complete.cases(airquality),]
nrow(airqualityCom)
airquality[is.na(airquality) == T]
airqualityRep = airquality
airqualityRep[is.na(airqualityRep) == T] = 0
head(airqualityRep)
data("HairEyeColor")
hairEyeColor = as.data.frame(HairEyeColor)
gombe = read.csv(file="./data/gombe_128.csv", header=TRUE)
horseKicks = read.table(file="./data/HorseKicks.txt", header=TRUE, sep="\t")
library(readxl)
folktales = read_xlsx(path="./data/rsos150645supp1.xlsx",
sheet=1, range="A2:JP52")
folktales = as.data.frame(folktales)
colnames(folktales)[1] = "society"
cor(folktales)
head(gombe)
cor(gombe$dom, gombe$dominance)
summary(gombe)
cor(gombe$sex, gombe$dominance)
cor(gombe$dom, gombe$sex)
airquality
hairEyeColor
data("UCBAdmissions")
head(UBCAdmissions)
head(UCBAdmissions)
UCBAdmissions
head(as.data.frame(UCBAdmissions))
as.data.frame(UCBAdmissions)
data("airquality")
airquality
data("lh")
lh
data("longley")
longley
cor(longley$Armed.Forces, longley$Population)
cor(longley$Unemployed, longley$Employed)
data("mtcars")
mtcars
table(mtcars, gear, carb)
table(mtcars$gear, mtcars$carb)
?mtcars
cor(mtcars$gear, mtcars$carb)
head(gombe)
?plot
plot(gombe$sex, gombe$dom)
windows()
plot(gombe$dominance, gombe$extraversion)
plot(gombe$dominance, gombe$agreeableness)
plot(gombe$dominance, gombe$neuroticism)
airquality
plot(airquality$Month, airquality$Temp)
plot(airquality$Solar.R, airquality$Temp)
plot(airquality$Wind, airquality$Temp)
boxplot(airquality$Wind ~ airquality$Temp)
boxplot(Wind ~ Temp, data=airquality)
boxplot(Temp ~ Wind, data=airquality)
boxplot(airquality$Wind)
boxplot.stats(airquality$Wind)
boxplot.stats(airquality$Wind)$out
names(boxplot.stats(airquality$Wind))
?boxplot.stats
iqr?
?IQR
quantiles(airquality$Wind)
quantile(airquality$Wind)
quantile(airquality$Wind)
IQR(airquality$Wind)
quantile(airquality$Wind)[4]
quantile(airquality$Wind)[[4]]
airquality$Wind[airquality$Wind < (quantile(airquality$Wind)[[2]] - 1.5 * IQR(airquality$Wind)) |
airquality$Wind > (quantile(airquality$Wind)[[4]] + 1.5 * IQR(airquality$Wind))]
boxplot.stats(airquality$Wind)$out
boxplot.stats(Temp ~ Wind, data=airquality)
head(gombe)
summary(gombe)
median(gombe$extraversion)
names(sort(-table(gombe$extraversion)))[1]
names(sort(-table(gombe$extraversion)))
names(max(table(gombe$extraversion)))
max(table(gombe$extraversion))
range(gombe$extraversion)
min(gombe$extraversion)
max(gombe$extraversion)
sd(gombe$extraversion)
var(gombe$extraversion)
sd(gombe$extraversion)^2
sqrt(var(gombe$extraversion))
?confint
horseKicks
hist(horseKicks)
hist(as.vector(horseKicks))
str(horseKicks)
hist(horseKicks[,c(2:ncol(horseKicks))])
?hist
horseKicks[,c(2:ncol(horseKicks))]
as.numeric(horseKicks[,c(2:ncol(horseKicks)])
as.numeric(horseKicks[,c(2:ncol(horseKicks))])
as.matrix(horseKicks)
as.numeric(horseKicks)
str(horseKicks)
unlist(horseKicks)
hist(horseKicks[,c(2:ncol(horseKicks))])
is.list(horseKicks)
is.data.frame(horseKicks)
horseKicks[,c(2:ncol(horseKicks))]
unname(horseKicks[,c(2:ncol(horseKicks))])
hist(unname(horseKicks[,c(2:ncol(horseKicks))]))
hist(as.numeric(horseKicks[,c(2:ncol(horseKicks))]))
hist(unlist(horseKicks[,c(2:ncol(horseKicks))]))
horseKicksVals = unlist(horseKicks[,c(2:ncol(horseKicks))])
horseKicksVals
horseKicksVals = unname(unlist(horseKicks[,c(2:ncol(horseKicks))]))
horseKicksVals
hist(horseKicksVals, breaks=10)
hist(horseKicksVals, breaks=4)
density(horseKicksVals)
plot(density(horseKicksVals))
install.packages("vioplot")
library(vioplot)
?vioplot
vioplot(airquality$Wind)
vioplot(list(airquality$Wind, airquality$Ozone))
airquality
airquality$Wind[airquality$Month == 5]
airquality$Wind[airquality$Month == 6]
vioplot(airquality$Wind[airquality$Month == 5],
airquality$Wind[airquality$Month == 6],
airquality$Wind[airquality$Month == 7])
head(gombe)
plot(gombe$agreeableness, gombe$extraversion)
plot(gombe$openness, gombe$extraversion)
?abline
plot(gombe$openness, gombe$extraversion)
abline(lm(gombe$extraversion ~ gombe$openness), col="red")
cor(gombe$openness, gombe$extraversion)
library(ggplot2)
library(readxl)
egg = read_xlsx(path="./data/aaj1945_DataS1_Egg_shape_by_species_v2.xlsx",
sheet=1)
egg = as.data.frame(egg)
head(egg)
str(egg)
colnames(egg)
colnames(egg)[7:9] = c("AvgLength","NumberOfImages","NumberOfEggs")
ggplot(data=egg, mapping=aes(x=Asymmetry, y=Ellipticity)) +
geom_point()
egg[is.na(egg$Asymmetry),]
egg[is.na(egg$Ellipticity),]
tail(egg)
egg = egg[-c(1401,1402),]
tail(egg)
ggplot(data=egg, mapping=aes(x=Asymmetry, y=Ellipticity)) +
geom_point()
?geom_abline
ggplot(data=egg, mapping=aes(x=Asymmetry, y=Ellipticity)) +
geom_point() +
geom_abline(slope=1, intercept=0)
ggplot(data=egg, mapping=aes(x=Order, y=Asymmetry)) +
geom_bar()
ggplot(data=egg, mapping=aes(x=Order)) +
geom_bar()
ggplot(data=egg, mapping=aes(x=Order)) +
geom_bar() +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=egg, mapping=aes(x=Order, y=Asymmetry)) +
geom_bar(stat="summary", fun.y="mean") +
theme(axis.text.x=element_text(angle=50, hjust=1))
library(Hmisc)
ggplot(data=egg, mapping=aes(x=Order, y=Asymmetry)) +
geom_bar(stat="summary", fun.y="mean") +
geom_errorbar(stat="summary", fun.data="mean_cl_normal") +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=egg, mapping=aes(x=Order, y=Asymmetry)) +
geom_bar(stat="summary", fun.y="mean") +
geom_errorbar(stat="summary", fun.data="mean_cl_normal") +
ylim(c(0,0.4)) +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=egg, mapping=aes(x=Order, y=Asymmetry)) +
geom_bar(stat="summary", fun.y="mean") +
geom_errorbar(stat="summary", fun.data="mean_cl_normal") +
coord_cartesian(ylim=c(0,0.4)) +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=egg, mapping=aes(x=Order, y=Asymmetry, fill=Order)) +
geom_bar(stat="summary", fun.y="mean") +
geom_errorbar(stat="summary", fun.data="mean_cl_normal") +
coord_cartesian(ylim=c(0,0.4)) +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=egg, mapping=aes(x=Order, y=Asymmetry, fill=Order)) +
geom_bar(stat="summary", fun.y="mean") +
geom_errorbar(stat="summary", fun.data="mean_cl_normal") +
coord_cartesian(ylim=c(0,0.4)) +
guides(fill=FALSE) +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=egg, mapping=aes(x=Order, y=Asymmetry, fill=Order)) +
stat_summary(geom="bar", fun.y=mean) +
stat_summary(geom="errorbar", fun.data=mean_cl_normal,
width=0.5) +
coord_cartesian(ylim=c(0,0.4)) +
guides(fill=FALSE) +
theme(axis.text.x=element_text(angle=50, hjust=1))
library(Rmisc)
eggAsymByOrder = summarySE(data=egg,
measurevar="Asymmetry",
groupvars=c("Order"))
ggplot(data=eggAsymByOrder, mapping=aes(x=Order, y=Asymmetry, fill=Order)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=Asymmetry-ci, ymax=Asymmetry+ci),
width=0.5) +
coord_cartesian(ylim=c(0,0.4)) +
guides(fill=FALSE) +
theme(axis.text.x=element_text(angle=50, hjust=1))
eggAsymGalli = egg[egg$Order == "GALLIFORMES",]
head(eggAsymGalli)
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family)) +
geom_bar(stat="identity") +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free") +
geom_bar(stat="identity") +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme(axis.text.x=element_text(angle=50, hjust=1))
unique(eggAsymGalli$Family)
library(dplyr)
recode(eggAsymGalli,
Cracidae = "C",
Megapodiidae = "M",
Numididae = "N",
Odontophoridae = "O",
Phasianidae = "P")
install.packages("dplyr")
library(dplyr)
recode(eggAsymGalli,
Cracidae = "C",
Megapodiidae = "M",
Numididae = "N",
Odontophoridae = "O",
Phasianidae = "P")
recode(eggAsymGalli$Family,
Cracidae = "C",
Megapodiidae = "M",
Numididae = "N",
Odontophoridae = "O",
Phasianidae = "P")
eggAsymGalli$Family = recode(eggAsymGalli$Family,
Cracidae = "C",
Megapodiidae = "M",
Numididae = "N",
Odontophoridae = "O",
Phasianidae = "P")
windows();ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme_minimal() +
theme(axis.text.x=element_text(angle=50, hjust=1))
?theme
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme_linedraw() +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme_dark() +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme_bw() +
theme(axis.text.x=element_text(angle=50, hjust=1))
install.packages("xkcd")
library(xkcd)
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme_xkcd() +
theme(axis.text.x=element_text(angle=50, hjust=1))
vignette("xkcd-intro")
library(extrafont)
getwd()
download.file("http://simonsoftware.se/other/xkcd.ttf",
dest="resources/xkcd.ttf", mode="wb")
font_import(pattern = "[X/x]kcd", prompt=FALSE)
?font_i\
?font_import
font_import(paths="./resources/", pattern="[X/x]kcd", prompt=FALSE)
fonts()
loadfonts(device="win")  # For Mac: loadfonts()
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme_xkcd() +
theme(axis.text.x=element_text(angle=50, hjust=1))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme_xkcd() +
theme(axis.text.x=element_text(angle=50, hjust=1),
text=element_text(family = "xkcd"))
ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) + theme(text = element_text(size = 16, family = "xkcd"))
fonttable()
loadfonts()
ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) + theme(text = element_text(size = 16, family = "xkcd"))
ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) + theme(text = element_text(size = 16, family = "xkcd"))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme_xkcd() +
theme(axis.text.x=element_text(angle=50, hjust=1),
text=element_text(family = "xkcd"))
?xkcdrect
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
xkcdrect(stat="identity") +
theme_xkcd() +
theme(axis.text.x=element_text(angle=50, hjust=1),
text=element_text(family = "xkcd"))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
xkcdrect(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry), stat="identity") +
theme_xkcd() +
theme(axis.text.x=element_text(angle=50, hjust=1),
text=element_text(family = "xkcd"))
windows()
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme(axis.text.x=element_text(angle=50, hjust=1, size=10))
ggplot(data=eggAsymGalli, mapping=aes(x=Species, y=Asymmetry)) +
facet_grid(cols=vars(Family), scales="free", space="free") +
geom_bar(stat="identity") +
theme(axis.text.x=element_text(angle=50, hjust=1, size=5))
