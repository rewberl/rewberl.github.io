library (carData)
detach(carData)
detach("package:carData", unload=TRUE)
data("iris")
iris
summary(iris)
str(iris)
?str
?subset
irisV = subset(iris, Species == "virginica")
irisV
?vor
?cor
cor(irisV$Sepal.Length, irisV$Petal.Length)
mean(c(a,b,c))
a = 1
b = 2
c = 42
a
b
a = a + b
a
a = a + b
a
a = a + b
a
mean(c(a,b,c))
n
b
?mean
11/20
(11/20)+(11/20)
(11/20)^10
(12/20)^10
5280*10/4200
(11/20)^12
(11/20)^(13*3)
(11/20)^(12*3)
(12/20)^12
(12/20)^(12*3)
(13/20)^12
(11/20)^6
install.packages("stringi")
installed.packages()
installed.packages(priority="high")
?library
library("ggplot2")
?install.packages
install.packages(psych)
rownames(installed.packages(priority="high"))
a = c(5, 4, 3) > c(6, 1, 3)
is.logical(a)
is.numeric(a)
is.integer(a)
is.factor(a)
is.character(a)
?logical
?BasicClasses
?methods::BasicClasses
?class
??BasicClasses
?methods::character-`character-class`
?methods::character-class
?methods::'character-class'
?methods::`character-class`
Sys.Date
Sys.Date()
Sys.Time()
Sys.time()
str(Sys.time())
str(Sys.Date())
installed.packages(priority="high")
installed.packages(priority="high")$Package
library(dplyr)
library(plyr)
?seq
seq(from=1, to=3, by=1)
a = 1
b = 2
c = 42
a = a + b
a
a = a + b
a
a = a + b
a
b
# "This line is commented out."
"This line is not commented out."
# Load iris data
data(iris)
# View structure of iris data
str(iris)
# Subset iris data to Species versicolor
irisVe = subset(x=iris, subset=Species == "versicolor")
# Find correlation between sepal length and petal length in versicolor
cor(x=irisVe$Sepal.Length, y=irisVe$Petal.Length)  # Result: 0.754049
rownames(installed.packages(priority="high"))
m = 5L
n = 1L
m + n
r = 300 > 1
r
s = 5 == 4
s
r + s
x = "apple"
y = "orange"
z = "2.5"
x
y
z
x + y
z + b
xy = paste(x, y)
zb = paste(z, b)
strsplit(x=xy, split=" ", fixed=TRUE)
Sys.Date()
str(Sys.Date())
Sys.time()
str(Sys.time())
z
b
z + b
z = as.numeric(z)
z
z + b
steve = "Steve"
as.numeric(steve)
numVec = c(1,2,3,8,9,10)
numVec
charVec = c("the","quick","brown","fox")
charVec
is.vector(numVec)
is.vector(charVec)
numVec[6]
charVec[2]
numVec[4]
numVec[8]
numVec[1] = 10000
numVec
numVec[4] / 2
numVecB = c(75,100,500)
numVecC = c(numVec, numVecB)
numVecC
charVecB = c("jumps","over","the","lazy","dog")
charVecC = c(charVec, charVecB)
charVecC
class(numVec)
class(charVec)
mixVec = c(numVec, charVec)
mixVec
emptyNumVec = numeric()
emptyNumVec
emptyNumVec[1] = 2
emptyNumVec[2] = 4
emptyNumVec
numVec
numVecB
numVec + numVecB
length(numVec)
length(numVecB)
firstM = matrix(data=c(4,81,5,84,
70,72,74,69,
29,34,27,3),
nrow=3, ncol=4)
firstM
firstM = matrix(data=c(4,81,5,84,
70,72,74,69,
29,34,27,3),
nrow=3, ncol=4, byrow=TRUE)
firstM
dim(firstM)
nrow(firstM)
ncol(firstM)
firstM[2,4]
firstM[2,4] = firstM[2,4] - 1
firstM[2,4]
firstM[1,]
firstM[,3]
firstM[1:3,c(1,4)]
firstDF = data.frame(firstM)
firstDF
colnames(firstDF)
length(colnames(firstDF))
colnames(firstDF) = c("soil","climate","altitude","rating")
firstDF
firstDF$soil
firstDF$rating / firstDF$altitude
firstDF$altitude[3]
firstDF[1,4] - firstDF[1,1]
myList = list(numVec,
charVec,
list(c(1,2,3), c(3,2,1)),
"Franz Liszt")
myList
myList[2]
a
b
c
mean(x=c(a, b, c))
a_plus_b = function(a, b){
aPlusB = a + b
return(aPlusB)
}
a_plus_b(a=1, b=5)
aPlusB(a=1, b=5)
aPlusB
myList
myList[2]
myList[[2]]
is.list(myList[2])
firstDF
which(firstDF$rating > 35)
firstDF[which(firstDF$rating > 35)]
firstDF[which(firstDF$rating > 35),]
firstM
data("mtcars")
mtcars
?data("mtcars")
data("attitude")
attitude
help(attitude)
data("HairEyeColor")
HairEyeColor
as.data.frame(HairEyeColor)
sum(as.data.frame(HairEyeColor)$Freq)
?HairEyeColor
??rdatasets
install.packages("Rdatasets")
data(Greene)
?AirPassengers
?crimtab
?read.table
